<style>
  .table-responsive {

  }

  html {
    width: 1600px;
  }
  .custom-combobox {
    position: relative;
    display: inline-block;
  }
  .custom-combobox-toggle {
    position: absolute;
    top: 0;
    bottom: 0;
    margin-left: -1px;
    padding: 0;
  }
  .custom-combobox-input {
    margin: 0;
    padding: 5px 10px;
  }
</style>
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script>
  $(function() {
    $("#datepicker").datepicker();
  });


  $(document).on('change', '#datepicker', function() {
    var curr, first, second, third, fourth, fifth, sixth, last, firstday, lastday, secondday, thirdday, fourthday, fifthday, sixthday;
    var monthNames = ["January", "February", "March", "April", "May", "June",
      "July", "August", "September", "October", "November", "December"
    ];
    curr = $('#datepicker').datepicker('getDate');
    first = curr.getDate() - curr.getDay();
    firstday = new Date(curr.setDate(first));
    second = curr.getDate() +1;
    secondday = new Date(curr.setDate(second));
    third = curr.getDate() + 1;
    thirdday = new Date(curr.setDate(third));
    fourth = curr.getDate() + 1;
    fourthday = new Date(curr.setDate(fourth));
    fifth = curr.getDate() + 1;
    fifthday = new Date(curr.setDate(fifth));
    sixth = curr.getDate() + 1;
    sixthday = new Date(curr.setDate(sixth));
    last = curr.getDate() + 1;
    lastday = new Date(curr.setDate(last));

    $('#dateTitle').text( (monthNames[firstday.getMonth()] ) + ' ' + firstday.getDate() + ', ' +  firstday.getFullYear() + " - " + (monthNames[lastday.getMonth()] ) + ' ' + lastday.getDate() + ', ' +  lastday.getFullYear() );
    $('#Date1').text("Sun " + firstday.getDate() );
    $('#Date2').text("Mon " + secondday.getDate() );
    $('#Date3').text("Tue " + thirdday.getDate() );
    $('#Date4').text("Wed " + fourthday.getDate() );
    $('#Date5').text("Thu " + fifthday.getDate() );
    $('#Date6').text("Fri " + sixthday.getDate() );
    $('#Date7').text("Sat " + lastday.getDate() );

    $('#datePicked').val(curr);

    $('#tableElements').children('tr').each(function () {
      if ($(this).children('.dateBlob').text() == $.datepicker.formatDate("yy-mm-dd", curr)) {
        $(this).css("display","");
        $(this).children('td').each(function () {
          var str = $(this).text();
          if(str.length > 10) {
            str = str.substring(0, 15) + "...";
            $(this).text(str);
          }
        });

      } else {
        $(this).css("display","none");
        // alert($(this).children('.dateBlob').text() + "      " + $.datepicker.formatDate("yy-mm-dd", curr) );
      }
    });

    //Saves date local variable
    sessionStorage.datePicked = $('#datepicker').datepicker('getDate');

  });

  $( document ).ready(function() {
    var curr, first, second, third, fourth, fifth, sixth, last, firstday, lastday, secondday, thirdday, fourthday, fifthday, sixthday;
    var monthNames = ["January", "February", "March", "April", "May", "June",
      "July", "August", "September", "October", "November", "December"
    ];

    if (sessionStorage.refreshCount == undefined) {
      $("#datepicker").datepicker().datepicker("setDate", new Date());
      sessionStorage.refreshCount = 1;
    } else {
      var date = sessionStorage.datePicked;
      date = new Date(date);
      date.setDate(date.getDate());

      $("#datepicker").datepicker().datepicker("setDate", date );
    }
    sessionStorage.refreshCount = sessionStorage.refreshCount + 1;
    //new Date("10/10/2016")

    curr = $('#datepicker').datepicker('getDate');
    first = curr.getDate() - curr.getDay();

    firstday = new Date(curr.setDate(first));
    second = curr.getDate() +1;
    secondday = new Date(curr.setDate(second));
    third = curr.getDate() + 1;
    thirdday = new Date(curr.setDate(third));
    fourth = curr.getDate() + 1;
    fourthday = new Date(curr.setDate(fourth));
    fifth = curr.getDate() + 1;
    fifthday = new Date(curr.setDate(fifth));
    sixth = curr.getDate() + 1;
    sixthday = new Date(curr.setDate(sixth));
    last = curr.getDate() + 1;
    lastday = new Date(curr.setDate(last));

    $('#dateTitle').text( (monthNames[firstday.getMonth()] ) + ' ' + firstday.getDate() + ', ' +  firstday.getFullYear() + " - " + (monthNames[lastday.getMonth()] ) + ' ' + lastday.getDate() + ', ' +  lastday.getFullYear() );
    $('#Date1').text("Sun " + firstday.getDate() );
    $('#Date2').text("Mon " + secondday.getDate() );
    $('#Date3').text("Tue " + thirdday.getDate() );
    $('#Date4').text("Wed " + fourthday.getDate() );
    $('#Date5').text("Thu " + fifthday.getDate() );
    $('#Date6').text("Fri " + sixthday.getDate() );
    $('#Date7').text("Sat " + lastday.getDate() );

    $('#datePicked').val(curr);

    //Limits text to 15 characters
    $('#tableElements').children('tr').each(function () {
      if ($(this).children('.dateBlob').text() == $.datepicker.formatDate("yy-mm-dd", curr)) {
        $(this).css("display","");
        $(this).children('td').each(function () {
          var str = $(this).text();
          if(str.length > 10) {
            str = str.substring(0, 15) + "...";
            $(this).text(str);
          }
        });
      } else {
        $(this).css("display","none");
        // alert($(this).children('.dateBlob').text() + "      " + $.datepicker.formatDate("yy-mm-dd", curr) );
      }
    });

    //Saves date local variable
    sessionStorage.datePicked = $('#datepicker').datepicker('getDate');
  });

  $(window).scroll(function (event) {
    var scroll = $(window).scrollLeft();
    if (scroll > 50 ) {
      $('#submitBut').css('position','fixed');
    }
    else {
      $('#submitBut').css('position','');
    }
    // Do something
  });

  $(".dropdown-menu li a").click(function(){
    $(this).parents(".dropdown").find('.btn').html($(this).text() + ' <span class="caret"></span>');
    $(this).parents(".dropdown").find('.btn').val($(this).data('value'));
  });

  var sum;
  $(document).on('change', '.numb', function() {
    sum = 0;
    $('.numb').each(function () {
      sum = sum + Number($(this).val());
    });
    $('#totalNew').val(sum);
  });

  function validate(evt) {
    var theEvent = evt || window.event;
    var key = theEvent.keyCode || theEvent.which;
    key = String.fromCharCode( key );
    var regex = /[0-9]|\./;
    if( !regex.test(key) ) {
      theEvent.returnValue = false;
      if(theEvent.preventDefault) theEvent.preventDefault();
    }
  }



  $( function() {
    $.widget( "custom.combobox", {
      _create: function() {
        this.wrapper = $( "<span>" )
            .addClass( "custom-combobox" )
            .insertAfter( this.element );

        this.element.hide();
        this._createAutocomplete();
        this._createShowAllButton();
      },

      _createAutocomplete: function() {
        var selected = this.element.children( ":selected" ),
            value = selected.val() ? selected.text() : "";

        this.input = $( "<input>" )
            .appendTo( this.wrapper )
            .val( value )
            .attr( "title", "" )
            .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
            .autocomplete({
              delay: 0,
              minLength: 0,
              source: $.proxy( this, "_source" )
            })
            .tooltip({
              classes: {
                "ui-tooltip": "ui-state-highlight"
              }
            });

        this._on( this.input, {
          autocompleteselect: function( event, ui ) {
            ui.item.option.selected = true;
            this._trigger( "select", event, {
              item: ui.item.option
            });
          },

          autocompletechange: "_removeIfInvalid"
        });
      },

      _createShowAllButton: function() {
        var input = this.input,
            wasOpen = false;

        $( "<a>" )
            .attr( "tabIndex", -1 )
            .attr( "title", "Show All Items" )
            .tooltip()
            .appendTo( this.wrapper )
            .button({
              icons: {
                primary: "ui-icon-triangle-1-s"
              },
              text: false
            })
            .removeClass( "ui-corner-all" )
            .addClass( "custom-combobox-toggle ui-corner-right" )
            .on( "mousedown", function() {
              wasOpen = input.autocomplete( "widget" ).is( ":visible" );
            })
            .on( "click", function() {
              input.trigger( "focus" );

              // Close if already visible
              if ( wasOpen ) {
                return;
              }

              // Pass empty string as value to search for, displaying all results
              input.autocomplete( "search", "" );
            });
      },

      _source: function( request, response ) {
        var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
        response( this.element.children( "option" ).map(function() {
          var text = $( this ).text();
          if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
      },

      _removeIfInvalid: function( event, ui ) {

        // Selected an item, nothing to do
        if ( ui.item ) {
          return;
        }

        // Search for a match (case-insensitive)
        var value = this.input.val(),
            valueLowerCase = value.toLowerCase(),
            valid = false;
        this.element.children( "option" ).each(function() {
          if ( $( this ).text().toLowerCase() === valueLowerCase ) {
            this.selected = valid = true;
            return false;
          }
        });

        // Found a match, nothing to do
        if ( valid ) {
          return;
        }

        // Remove invalid value
        this.input
            .val( "" )
            .attr( "title", value + " didn't match any item" )
            .tooltip( "open" );
        this.element.val( "" );
        this._delay(function() {
          this.input.tooltip( "close" ).attr( "title", "" );
        }, 2500 );
        this.input.autocomplete( "instance" ).term = "";
      },

      _destroy: function() {
        this.wrapper.remove();
        this.element.show();
      }
    });

    $( "#combobox" ).combobox();
    $( "#toggle" ).on( "click", function() {
      $( "#combobox" ).toggle();
    });
  } );
</script>
</head>





<nav class="navbar navbar-inverse navbar-fixed-top">
      <div class="container-fluid">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="#">Project name</a>
        </div>
        <div id="navbar" class="navbar-collapse collapse">
          <ul class="nav navbar-nav navbar-right">
            <li><a href="#" data-turbolinks="false">Dashboard</a></li>
            <li><a href="#" data-turbolinks="false">Settings</a></li>
            <li><a href="#" data-turbolinks="false">Profile</a></li>
            <li><a href="#" data-turbolinks="false">Help</a></li>
          </ul>
          <form class="navbar-form navbar-right">
            <input type="text" class="form-control" placeholder="Search...">
          </form>
        </div>
      </div>
    </nav>

<% if user_signed_in? %>
    <% if current_user.admin == true %>
      <%= render "adminuser" %>
    <% else %>
      <%= render "normaluser" %>
    <% end %>
<% end %>