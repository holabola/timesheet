<style>
  .table-responsive {

  }

  html {
    width: 1600px;
  }
  .custom-combobox {
    position: relative;
    display: inline-block;
  }
  .custom-combobox-toggle {
    position: absolute;
    top: 0;
    bottom: 0;
    margin-left: -1px;
    padding: 0;
  }
  .custom-combobox-input {
    margin: 0;
    padding: 5px 10px;
  }
  .event a {
    background-color: #EC971F !important;
    background-image :none !important;
    color: #ffffff !important;
  }
</style>
<script>

  $(function() {

    $('input[id="timerange"]').daterangepicker();
    $('.selectpicker').selectpicker();
  });



  $( "body" ).click(function( event ) {

    if (event.target.id == "successBut") {

      $(event.target).parent().find("#failBut").removeClass();
      $(event.target).className = '';
      $(event.target).addClass("btn btn-success glyphicon glyphicon-ok");
      $(event.target).parent().find("#failBut").addClass("btn btn-default glyphicon glyphicon-remove");

    }
    else if (event.target.id == "failBut") {
      var otherchild = $(event.target).parent().find("#successBut");
      otherchild.removeClass();
      event.target.className = '';
      otherchild.addClass("btn btn-default glyphicon glyphicon-ok");
      $(event.target).addClass("btn btn-danger glyphicon glyphicon-remove");
    }

  });

  $(document).on('change', '#UserSearch', function() {
    var selectedOption = $('#UserSearch').val().trim();
    if (selectedOption != "") {
      $('#tableElements').children('tr').each(function () {
        if (moment($(this).children('.dateBlob').text()) <= lastday && moment($(this).children('.dateBlob').text()) >= firstday && $(this).find("#names").text().trim() == selectedOption ) {
          $(this).css("display","");
        } else {
          $(this).css("display","none");
        }
      });
    }
  });

  $(document).on('change', "#timerange", function(){
    var monthNames = ["January", "February", "March", "April", "May", "June",
      "July", "August", "September", "October", "November", "December"
    ];
    var thing = $('#timerange').val().indexOf("-");
    var firstday = new Date($("#timerange").val().substring(0,thing-1));
    var lastday = new Date($("#timerange").val().substring(thing,$("#timerange").val().length));

    $('#dateTitle').text( (monthNames[firstday.getMonth()] ) + ' ' + firstday.getDate() + ', ' +  firstday.getFullYear() + " - " + (monthNames[lastday.getMonth()] ) + ' ' + lastday.getDate() + ', ' +  lastday.getFullYear() );


  });
  var curr, first, second, third, fourth, fifth, sixth, last, firstday, lastday, secondday, thirdday, fourthday, fifthday, sixthday;
  $(document).on('change', '#datepicker', function() {


    var monthNames = ["January", "February", "March", "April", "May", "June",
      "July", "August", "September", "October", "November", "December"
    ];
    curr = $('#datepicker').datepicker('getDate');
    first = curr.getDate() - curr.getDay();
    firstday = new Date(curr.setDate(first));
    second = curr.getDate() +1;
    secondday = new Date(curr.setDate(second));
    third = curr.getDate() + 1;
    thirdday = new Date(curr.setDate(third));
    fourth = curr.getDate() + 1;
    fourthday = new Date(curr.setDate(fourth));
    fifth = curr.getDate() + 1;
    fifthday = new Date(curr.setDate(fifth));
    sixth = curr.getDate() + 1;
    sixthday = new Date(curr.setDate(sixth));
    last = curr.getDate() + 1;
    lastday = new Date(curr.setDate(last));

    $('#dateTitle').text( (monthNames[firstday.getMonth()] ) + ' ' + firstday.getDate() + ', ' +  firstday.getFullYear() + " - " + (monthNames[lastday.getMonth()] ) + ' ' + lastday.getDate() + ', ' +  lastday.getFullYear() );
    $('#Date1').text("Sun " + firstday.getDate() );
    $('#Date2').text("Mon " + secondday.getDate() );
    $('#Date3').text("Tue " + thirdday.getDate() );
    $('#Date4').text("Wed " + fourthday.getDate() );
    $('#Date5').text("Thu " + fifthday.getDate() );
    $('#Date6').text("Fri " + sixthday.getDate() );
    $('#Date7').text("Sat " + lastday.getDate() );


    $('#datePicked').val($('#datepicker').datepicker('getDate'));

    $('#tableElements').children('tr').each(function () {
        var selectedOption = $('#UserSearch').val().trim();
        if (selectedOption != "") {
          $('#tableElements').children('tr').each(function () {
            if (moment($(this).children('.dateBlob').text()) <= lastday && moment($(this).children('.dateBlob').text()) >= firstday && $(this).find("#names").text().trim() == selectedOption ) {
              $(this).css("display","");
            } else {
              $(this).css("display","none");
            }
          });
        } else {
          if (moment($(this).children('.dateBlob').text()) <= lastday && moment($(this).children('.dateBlob').text()) >= firstday) {
            $(this).css("display", "");
            $(this).children('td').each(function () {
              var str = $(this).text();
              if (str.length > 10) {
                str = str.substring(0, 15) + "...";
                $(this).text(str);
              }
            });

          } else {
            $(this).css("display", "none");
            // alert($(this).children('.dateBlob').text() + "      " + $.datepicker.formatDate("yy-mm-dd", curr) );
          }
        }
    });

    $('#timerange').data('daterangepicker').setStartDate(firstday);
    $('#timerange').data('daterangepicker').setEndDate(lastday);

    //Saves date local variable
    sessionStorage.datePicked = $('#datepicker').datepicker('getDate');



  });

  $( document ).ready(function() {

    var monthNames = ["January", "February", "March", "April", "May", "June",
      "July", "August", "September", "October", "November", "December"
    ];
    var nameArray = [];

    //Init Datepicker
    var eventDates = {};
    $('.timesheetEntry').each(function() {
      var approval = $(this).find('#approval').text();
      var datez = $(this).find('#dateOfTime').text();
      if (approval == "Pending" || approval == "") {
        eventDates[new Date(moment(datez))] = new Date(moment(datez));
      }
    });
    $("#datepicker").datepicker( {
      beforeShowDay: function( date ) {
        var highlight = eventDates[date];
        if( highlight ) {
          return [true, "event", 'Tooltip text'];
        } else {
          return [true, '', ''];
        }
      }
    });


    if (sessionStorage.refreshCount == undefined) {
      $("#datepicker").datepicker().datepicker("setDate", new Date());
      sessionStorage.refreshCount = 1;
    } else {
      var date = sessionStorage.datePicked;
      date = new Date(date);
      date.setDate(date.getDate());

      $("#datepicker").datepicker().datepicker("setDate", date );
    }
    sessionStorage.refreshCount = sessionStorage.refreshCount + 1;
    //new Date("10/10/2016")

    curr = $('#datepicker').datepicker('getDate');
    first = curr.getDate() - curr.getDay();

    firstday = new Date(curr.setDate(first));
    second = curr.getDate() +1;
    secondday = new Date(curr.setDate(second));
    third = curr.getDate() + 1;
    thirdday = new Date(curr.setDate(third));
    fourth = curr.getDate() + 1;
    fourthday = new Date(curr.setDate(fourth));
    fifth = curr.getDate() + 1;
    fifthday = new Date(curr.setDate(fifth));
    sixth = curr.getDate() + 1;
    sixthday = new Date(curr.setDate(sixth));
    last = curr.getDate() + 1;
    lastday = new Date(curr.setDate(last));

    $('#dateTitle').text( (monthNames[firstday.getMonth()] ) + ' ' + firstday.getDate() + ', ' +  firstday.getFullYear() + " - " + (monthNames[lastday.getMonth()] ) + ' ' + lastday.getDate() + ', ' +  lastday.getFullYear() );
    $('#Date1').text("Sun " + firstday.getDate() );
    $('#Date2').text("Mon " + secondday.getDate() );

    $('#Date3').text("Tue " + thirdday.getDate() );
    $('#Date4').text("Wed " + fourthday.getDate() );
    $('#Date5').text("Thu " + fifthday.getDate() );
    $('#Date6').text("Fri " + sixthday.getDate() );
    $('#Date7').text("Sat " + lastday.getDate() );

    //extra name initialize
    $('#UserSearch').append('<option></option>');
    //

    $('#datePicked').val($('#datepicker').datepicker('getDate'));

    $('#tableElements').children('tr').each(function () {
      if (moment($(this).children('.dateBlob').text()) <= lastday && moment($(this).children('.dateBlob').text()) >= firstday) {
        $(this).css("display","");
        $(this).children('td').each(function () {
          var str = $(this).text();
          if(str.length > 10) {
            str = str.substring(0, 15) + "...";
            $(this).text(str);
          }
        });

      } else {
        $(this).css("display","none");
        // alert($(this).children('.dateBlob').text() + "      " + $.datepicker.formatDate("yy-mm-dd", curr) );
      }

      //find names
      var name = $(this).find('#names').text();
      if (jQuery.inArray(name,nameArray) == -1 ) {
        nameArray.push(name);
        $('#UserSearch').append('<option data-icon="glyphicon-user">' + name + '</option>');
        $('.selectpicker').selectpicker('refresh');
      } else {

      }
    });
    $('#timerange').data('daterangepicker').setStartDate(firstday);
    $('#timerange').data('daterangepicker').setEndDate(lastday);

    //Saves date local variable
    sessionStorage.datePicked = $('#datepicker').datepicker('getDate');

    //Approval Buttons
    $('.approvalButtons').each(function() {
      var approval = $(this).find('#ApprovalBlob').val();
      $(this).find('#successBut').className = '';
      $(this).find('#failBut').className = '';
      if (approval == "Approved") {
        $(this).find('#successBut').addClass("btn btn-success glyphicon glyphicon-ok");
        $(this).find('#failBut').addClass("btn btn-default glyphicon glyphicon-remove");
      }
      if (approval == "Unapproved") {
        $(this).find('#successBut').addClass("btn btn-default glyphicon glyphicon-ok");
        $(this).find('#failBut').addClass("btn btn-danger glyphicon glyphicon-remove");
      }
      if (approval == "Pending" || approval == "") {
        $(this).find('#successBut').addClass("btn btn-warning glyphicon glyphicon-ok");
        $(this).find('#failBut').addClass("btn btn-warning glyphicon glyphicon-remove");
      }
    });



  });

  $(window).scroll(function (event) {
    var scroll = $(window).scrollLeft();
    if (scroll > 50 ) {
      $('#submitBut').css('position','fixed');
    }
    else {
      $('#submitBut').css('position','');
    }
    // Do something
  });

  $(".dropdown-menu li a").click(function(){
    $(this).parents(".dropdown").find('.btn').html($(this).text() + ' <span class="caret"></span>');
    $(this).parents(".dropdown").find('.btn').val($(this).data('value'));
  });

  var sum;
  $(document).on('change', '.numb', function() {
    sum = 0;
    $('.numb').each(function () {
      sum = sum + Number($(this).val());
    });
    $('#totalNew').val(sum);
  });

  function validate(evt) {
    var theEvent = evt || window.event;
    var key = theEvent.keyCode || theEvent.which;
    key = String.fromCharCode( key );
    var regex = /[0-9]|\./;
    if( !regex.test(key) ) {
      theEvent.returnValue = false;
      if(theEvent.preventDefault) theEvent.preventDefault();
    }
  }



  $( function() {
    $.widget( "custom.combobox", {
      _create: function() {
        this.wrapper = $( "<span>" )
            .addClass( "custom-combobox" )
            .insertAfter( this.element );

        this.element.hide();
        this._createAutocomplete();
        this._createShowAllButton();
      },

      _createAutocomplete: function() {
        var selected = this.element.children( ":selected" ),
            value = selected.val() ? selected.text() : "";

        this.input = $( "<input>" )
            .appendTo( this.wrapper )
            .val( value )
            .attr( "title", "" )
            .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
            .autocomplete({
              delay: 0,
              minLength: 0,
              source: $.proxy( this, "_source" )
            })
            .tooltip({
              classes: {
                "ui-tooltip": "ui-state-highlight"
              }
            });

        this._on( this.input, {
          autocompleteselect: function( event, ui ) {
            ui.item.option.selected = true;
            this._trigger( "select", event, {
              item: ui.item.option
            });
          },

          autocompletechange: "_removeIfInvalid"
        });
      },

      _createShowAllButton: function() {
        var input = this.input,
            wasOpen = false;

        $( "<a>" )
            .attr( "tabIndex", -1 )
            .attr( "title", "Show All Items" )
            .tooltip()
            .appendTo( this.wrapper )
            .button({
              icons: {
                primary: "ui-icon-triangle-1-s"
              },
              text: false
            })
            .removeClass( "ui-corner-all" )
            .addClass( "custom-combobox-toggle ui-corner-right" )
            .on( "mousedown", function() {
              wasOpen = input.autocomplete( "widget" ).is( ":visible" );
            })
            .on( "click", function() {
              input.trigger( "focus" );

              // Close if already visible
              if ( wasOpen ) {
                return;
              }

              // Pass empty string as value to search for, displaying all results
              input.autocomplete( "search", "" );
            });
      },

      _source: function( request, response ) {
        var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
        response( this.element.children( "option" ).map(function() {
          var text = $( this ).text();
          if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
      },

      _removeIfInvalid: function( event, ui ) {

        // Selected an item, nothing to do
        if ( ui.item ) {
          return;
        }

        // Search for a match (case-insensitive)
        var value = this.input.val(),
            valueLowerCase = value.toLowerCase(),
            valid = false;
        this.element.children( "option" ).each(function() {
          if ( $( this ).text().toLowerCase() === valueLowerCase ) {
            this.selected = valid = true;
            return false;
          }
        });

        // Found a match, nothing to do
        if ( valid ) {
          return;
        }

        // Remove invalid value
        this.input
            .val( "" )
            .attr( "title", value + " didn't match any item" )
            .tooltip( "open" );
        this.element.val( "" );
        this._delay(function() {
          this.input.tooltip( "close" ).attr( "title", "" );
        }, 2500 );
        this.input.autocomplete( "instance" ).term = "";
      },

      _destroy: function() {
        this.wrapper.remove();
        this.element.show();
      }
    });

    $( "#combobox" ).combobox();
    $( "#toggle" ).on( "click", function() {
      $( "#combobox" ).toggle();
    });
  } );
</script>
</head>





<nav class="navbar navbar-inverse navbar-fixed-top">
  <div class="container-fluid">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="#">Project name</a>
    </div>
    <div id="navbar" class="navbar-collapse collapse">
      <ul class="nav navbar-nav navbar-right">
        <li><a href="#" data-turbolinks="false">Dashboard</a></li>
        <li><a href="#" data-turbolinks="false">Settings</a></li>
        <li><a href="#" data-turbolinks="false">Profile</a></li>
        <li><a href="#" data-turbolinks="false">Help</a></li>
      </ul>
      <form class="navbar-form navbar-right">
        <input type="text" class="form-control" placeholder="Search...">
      </form>
    </div>
  </div>
</nav>



    <div class="container-fluid" >
      <div class="row">
        <div class="col-sm-3 col-md-2 sidebar" id="sidebarNav">
          <div style="line-height:75%;"><br></div>
          <h2 style="text-align: center;">Timesheet</h2>
          <h4 style="text-align:center;">Custom Date Range</h4>
          <div style="text-align:center;"><input id="timerange" type="text"  ></div>
          </br>

          <div style="" id="datepicker"></div>
          </br>
          </br>
          <ul class="nav nav-sidebar">
            <li><a href="/" data-turbolinks="false">Timesheet</a></li>
            <li class="active"><a href="#">Timesheet Approvals<span class="sr-only">(current)</span></a></li>
            <li><a href="/expenses">Expenses</a></li>
            <li><a href="/expensesapprovals">Expenses Approvals</a></li>
            <li><a href="/exports">Exports</a></li>
          </ul>
          <!-- <ul class="nav nav-sidebar">
             <li><a href="">Nav item</a></li>
             <li><a href="">Nav item again</a></li>
             <li><a href="">One more nav</a></li>
             <li><a href="">Another nav item</a></li>
             <li><a href="">More navigation</a></li>
           </ul>
           <ul class="nav nav-sidebar">
             <li><a href="">Nav item again</a></li>
             <li><a href="">One more nav</a></li>
             <li><a href="">Another nav item</a></li>
           </ul> -->
        </div>

        <div id="dashContents">
          <div style="position: relative;height:80px;left:310px;top:10px;">
            <h2 class="page-header" style="" id="dateTitle"></h2>

            <p style="left:310px;">Sheets yet to be approved appear yellow. Just hit the check or x to approve or unapprove.</p>
            table

          </div>



          <h2 class="sub-header">Timesheet</h2>
          <div class="table-responsive" id="pageGapDash">

            <table class="table table-striped" style="font-size:12px;">
              <thead>
              <tr style="padding: 8px 8px 8px 0px;">
                <th></th>
                <th>Date</th>
                <th>Author</th>
                <th >Credit Union</th>
                <th >Activity</th>
                <th >Task</th>
                <th >Billing Options</th>
                <th >Billing Opt - SCR</th>
                <th >Billing Opt - FTR</th>
                <th  id="Date1"></th>
                <th  id="Date2"></th>
                <th  id="Date3"></th>
                <th  id="Date4"></th>
                <th  id="Date5"></th>
                <th  id="Date6"></th>
                <th  id="Date7"></th>
                <th >Total</th>

              </tr>
              </thead>
              <tbody>
              <tr >

              </tr>
</tbody>

<tbody id="tableElements">
<% @pages.each do |p| %>
    <tr id="row_<%= p.id %>" class="timesheetEntry">
      <td><div class="btn-group approvalButtons" role="group" aria-label="..."><%= form_for(p, remote: true, :url => {:action => 'update', :id => p.id}) do |f| %><%= f.text_field :approval, :value => p.approval,  :style => "display:none;", :id => "ApprovalBlob" %><%= button_tag "", type: 'submit', class: "", id:"successBut", name: "subaction", value: "Approved" %><%= button_tag "", type: 'submit', class: "btn btn-default glyphicon glyphicon-remove", id: "failBut", name: "subaction", value: "Unapproved" %></div>
        <% end %>
      </td>
      <td id="approval" style="display:none;"><%= p.approval %></td>
      <td id="dateOfTime"><%= p.date_of_time %></td>
      <td id="names"><%= p.user.first_name %> <%= p.user.last_name %></td>
      <td><%= p.credit_union %> </td>
      <td><%= p.activity %> </td>
      <td><%= p.task %> </td>
      <td><%= p.billing_options %> </td>
      <td><%= p.billing_options_scr %> </td>
      <td><%= p.billing_options_ftr %> </td>
      <td><%= p.sun %> </td>
      <td><%= p.mon %> </td>
      <td><%= p.tue %> </td>
      <td><%= p.wed %> </td>
      <td><%= p.thu %> </td>
      <td><%= p.fri %> </td>
      <td><%= p.sat %> </td>
      <td><%= p.total %> </td>
      <td style="display:none;" class="dateBlob"><%= p.date_of_time %></td>
    </tr>
<% end %>
</tbody>

</table>
</div>
</div>
</div>
</div>
